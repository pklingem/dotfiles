set -g default-terminal "screen-256color"
set -g base-index 1
setw -g mode-mouse on
set-option -g set-titles on

# move x clipboard into tmux paste buffer
bind C-p run "tmux set-buffer \"$(xclip -o)\"; tmux paste-buffer"
# move tmux copy buffer into x clipboard
bind C-y run "tmux save-buffer - | xclip -i"

# smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"

# TODO: use $(brew --prefix)
if-shell "uname | grep -q Darwin" "source /usr/local/lib/python2.7/site-packages/powerline/bindings/tmux/powerline.conf"
if-shell "uname | grep -q Linux" "source ~/.local/lib/python2.7/site-packages/powerline/bindings/tmux/powerline.conf"
set-option -g default-command "reattach-to-user-namespace -l bash"
